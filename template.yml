  #Schema link: https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
  contentVersion: 1.0.0.0
  parameters: 
    vulnerabilityAssessments_Default_storageContainerPath: 
      type: SecureString
    servers_linktechdbserver_name: 
      defaultValue: "linktechdbserver"
      type: String
    staticSites_LinkTech_WebApp_name: 
      defaultValue: "LinkTech-WebApp"
      type: String
    virtualNetworks_azce_prd_spk_LinkTech_vnet_name: 
      defaultValue: "azce-prd-spk-LinkTech-vnet"
      type: String
    networkSecurityGroups_azce_prd_spk_LinkTech_nsg_name: 
      defaultValue: "azce-prd-spk-LinkTech-nsg"
      type: String
    virtualNetworks_azce_prd_hub_LinkTech_vnet_externalid: 
      defaultValue: "/subscriptions/c23271e6-01ae-4dfa-85d3-783bf6dfa210/resourceGroups/azce-prd-hub-LinkTech-RG/providers/Microsoft.Network/virtualNetworks/azce-prd-hub-LinkTech-vnet"
      type: String
  variables: {}
  resources: 
    - 
      type: Microsoft.Network/networkSecurityGroups
      apiVersion: "2022-11-01"
      name: "[parameters('networkSecurityGroups_azce_prd_spk_LinkTech_nsg_name')]"
      location: "canadaeast"
      properties: 
        securityRules: 
          - 
            name: "AllowCustomVNetInBound"
            id: "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_azce_prd_spk_LinkTech_nsg_name'), 'AllowCustomVNetInBound')]"
            type: Microsoft.Network/networkSecurityGroups/securityRules
            properties: 
              protocol: "*"
              sourcePortRange: "*"
              destinationPortRange: "*"
              sourceAddressPrefix: "VirtualNetwork"
              destinationAddressPrefix: "VirtualNetwork"
              access: "Allow"
              priority: 100
              direction: "Inbound"
              sourcePortRanges: []
              destinationPortRanges: []
              sourceAddressPrefixes: []
              destinationAddressPrefixes: []
          - 
            name: "AllowCustomAzureLoadBalancerInBound"
            id: "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_azce_prd_spk_LinkTech_nsg_name'), 'AllowCustomAzureLoadBalancerInBound')]"
            type: Microsoft.Network/networkSecurityGroups/securityRules
            properties: 
              protocol: "*"
              sourcePortRange: "*"
              destinationPortRange: "*"
              sourceAddressPrefix: "AzureLoadBalancer"
              destinationAddressPrefix: "*"
              access: "Allow"
              priority: 110
              direction: "Inbound"
              sourcePortRanges: []
              destinationPortRanges: []
              sourceAddressPrefixes: []
              destinationAddressPrefixes: []
          - 
            name: "AllowAnyHTTPInbound"
            id: "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_azce_prd_spk_LinkTech_nsg_name'), 'AllowAnyHTTPInbound')]"
            type: Microsoft.Network/networkSecurityGroups/securityRules
            properties: 
              protocol: "TCP"
              sourcePortRange: "*"
              destinationPortRange: "80"
              sourceAddressPrefix: "*"
              destinationAddressPrefix: "*"
              access: "Allow"
              priority: 120
              direction: "Inbound"
              sourcePortRanges: []
              destinationPortRanges: []
              sourceAddressPrefixes: []
              destinationAddressPrefixes: []
          - 
            name: "AllowAnyHTTPSInbound"
            id: "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_azce_prd_spk_LinkTech_nsg_name'), 'AllowAnyHTTPSInbound')]"
            type: Microsoft.Network/networkSecurityGroups/securityRules
            properties: 
              protocol: "TCP"
              sourcePortRange: "*"
              destinationPortRange: "443"
              sourceAddressPrefix: "*"
              destinationAddressPrefix: "*"
              access: "Allow"
              priority: 130
              direction: "Inbound"
              sourcePortRanges: []
              destinationPortRanges: []
              sourceAddressPrefixes: []
              destinationAddressPrefixes: []
    - 
      type: Microsoft.Network/virtualNetworks
      apiVersion: "2022-11-01"
      name: "[parameters('virtualNetworks_azce_prd_spk_LinkTech_vnet_name')]"
      location: "canadaeast"
      tags: 
        Production Spoke VNet: ""
      properties: 
        addressSpace: 
          addressPrefixes: 
            - "10.1.0.0/16"
        subnets: 
          - 
            name: "default"
            id: "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_azce_prd_spk_LinkTech_vnet_name'), 'default')]"
            properties: 
              addressPrefix: "10.1.0.0/24"
              delegations: []
              privateEndpointNetworkPolicies: "Disabled"
              privateLinkServiceNetworkPolicies: "Enabled"
            type: Microsoft.Network/virtualNetworks/subnets
        virtualNetworkPeerings: 
          - 
            name: "ProdSpoke-to-Hub"
            id: "[resourceId('Microsoft.Network/virtualNetworks/virtualNetworkPeerings', parameters('virtualNetworks_azce_prd_spk_LinkTech_vnet_name'), 'ProdSpoke-to-Hub')]"
            properties: 
              peeringState: "Connected"
              peeringSyncLevel: "FullyInSync"
              remoteVirtualNetwork: 
                id: "[parameters('virtualNetworks_azce_prd_hub_LinkTech_vnet_externalid')]"
              allowVirtualNetworkAccess: true
              allowForwardedTraffic: true
              allowGatewayTransit: false
              useRemoteGateways: false
              doNotVerifyRemoteGateways: false
              remoteAddressSpace: 
                addressPrefixes: 
                  - "10.0.0.0/16"
              remoteVirtualNetworkAddressSpace: 
                addressPrefixes: 
                  - "10.0.0.0/16"
            type: Microsoft.Network/virtualNetworks/virtualNetworkPeerings
        enableDdosProtection: false
    - 
      type: Microsoft.Sql/servers
      apiVersion: "2022-11-01-preview"
      name: "[parameters('servers_linktechdbserver_name')]"
      location: "canadaeast"
      kind: "v12.0"
      properties: 
        administratorLogin: "cisco"
        version: "12.0"
        minimalTlsVersion: "1.2"
        publicNetworkAccess: "Enabled"
        restrictOutboundNetworkAccess: "Disabled"
    - 
      type: Microsoft.Web/staticSites
      apiVersion: "2022-09-01"
      name: "[parameters('staticSites_LinkTech_WebApp_name')]"
      location: "Central US"
      tags: 
        Production Spoke Web App: ""
      sku: 
        name: "Free"
        tier: "Free"
      properties: 
        repositoryUrl: "https://github.com/kananbali/LinkTech"
        branch: "main"
        stagingEnvironmentPolicy: "Enabled"
        allowConfigFileUpdates: true
        provider: "GitHub"
        enterpriseGradeCdnStatus: "Disabled"
    - 
      type: Microsoft.Network/networkSecurityGroups/securityRules
      apiVersion: "2022-11-01"
      name: "[concat(parameters('networkSecurityGroups_azce_prd_spk_LinkTech_nsg_name'), '/AllowAnyHTTPInbound')]"
      dependsOn: 
        - "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_azce_prd_spk_LinkTech_nsg_name'))]"
      properties: 
        protocol: "TCP"
        sourcePortRange: "*"
        destinationPortRange: "80"
        sourceAddressPrefix: "*"
        destinationAddressPrefix: "*"
        access: "Allow"
        priority: 120
        direction: "Inbound"
        sourcePortRanges: []
        destinationPortRanges: []
        sourceAddressPrefixes: []
        destinationAddressPrefixes: []
    - 
      type: Microsoft.Network/networkSecurityGroups/securityRules
      apiVersion: "2022-11-01"
      name: "[concat(parameters('networkSecurityGroups_azce_prd_spk_LinkTech_nsg_name'), '/AllowAnyHTTPSInbound')]"
      dependsOn: 
        - "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_azce_prd_spk_LinkTech_nsg_name'))]"
      properties: 
        protocol: "TCP"
        sourcePortRange: "*"
        destinationPortRange: "443"
        sourceAddressPrefix: "*"
        destinationAddressPrefix: "*"
        access: "Allow"
        priority: 130
        direction: "Inbound"
        sourcePortRanges: []
        destinationPortRanges: []
        sourceAddressPrefixes: []
        destinationAddressPrefixes: []
    - 
      type: Microsoft.Network/networkSecurityGroups/securityRules
      apiVersion: "2022-11-01"
      name: "[concat(parameters('networkSecurityGroups_azce_prd_spk_LinkTech_nsg_name'), '/AllowCustomAzureLoadBalancerInBound')]"
      dependsOn: 
        - "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_azce_prd_spk_LinkTech_nsg_name'))]"
      properties: 
        protocol: "*"
        sourcePortRange: "*"
        destinationPortRange: "*"
        sourceAddressPrefix: "AzureLoadBalancer"
        destinationAddressPrefix: "*"
        access: "Allow"
        priority: 110
        direction: "Inbound"
        sourcePortRanges: []
        destinationPortRanges: []
        sourceAddressPrefixes: []
        destinationAddressPrefixes: []
    - 
      type: Microsoft.Network/networkSecurityGroups/securityRules
      apiVersion: "2022-11-01"
      name: "[concat(parameters('networkSecurityGroups_azce_prd_spk_LinkTech_nsg_name'), '/AllowCustomVNetInBound')]"
      dependsOn: 
        - "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_azce_prd_spk_LinkTech_nsg_name'))]"
      properties: 
        protocol: "*"
        sourcePortRange: "*"
        destinationPortRange: "*"
        sourceAddressPrefix: "VirtualNetwork"
        destinationAddressPrefix: "VirtualNetwork"
        access: "Allow"
        priority: 100
        direction: "Inbound"
        sourcePortRanges: []
        destinationPortRanges: []
        sourceAddressPrefixes: []
        destinationAddressPrefixes: []
    - 
      type: Microsoft.Network/virtualNetworks/subnets
      apiVersion: "2022-11-01"
      name: "[concat(parameters('virtualNetworks_azce_prd_spk_LinkTech_vnet_name'), '/default')]"
      dependsOn: 
        - "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_azce_prd_spk_LinkTech_vnet_name'))]"
      properties: 
        addressPrefix: "10.1.0.0/24"
        delegations: []
        privateEndpointNetworkPolicies: "Disabled"
        privateLinkServiceNetworkPolicies: "Enabled"
    - 
      type: "Microsoft.Network/virtualNetworks/virtualNetworkPeerings"
      apiVersion: "2022-11-01"
      name: "[concat(parameters('virtualNetworks_azce_prd_spk_LinkTech_vnet_name'), '/ProdSpoke-to-Hub')]"
      dependsOn: 
        - "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_azce_prd_spk_LinkTech_vnet_name'))]"
      properties: 
        peeringState: "Connected"
        peeringSyncLevel: "FullyInSync"
        remoteVirtualNetwork: 
          id: "[parameters('virtualNetworks_azce_prd_hub_LinkTech_vnet_externalid')]"
        allowVirtualNetworkAccess: true
        allowForwardedTraffic: true
        allowGatewayTransit: false
        useRemoteGateways: false
        doNotVerifyRemoteGateways: false
        remoteAddressSpace: 
          addressPrefixes: 
            - "10.0.0.0/16"
        remoteVirtualNetworkAddressSpace: 
          addressPrefixes: 
            - "10.0.0.0/16"
    - 
      type: Microsoft.Sql/servers/advancedThreatProtectionSettings
      apiVersion: "2022-11-01-preview"
      name: "[concat(parameters('servers_linktechdbserver_name'), '/Default')]"
      dependsOn: 
        - "[resourceId('Microsoft.Sql/servers', parameters('servers_linktechdbserver_name'))]"
      properties: 
        state: "Disabled"
    - 
      type: "Microsoft.Sql/servers/advisors"
      apiVersion: "2014-04-01"
      name: "[concat(parameters('servers_linktechdbserver_name'), '/CreateIndex')]"
      dependsOn: 
        - "[resourceId('Microsoft.Sql/servers', parameters('servers_linktechdbserver_name'))]"
      properties: 
        autoExecuteValue: "Disabled"
    - 
      type: "Microsoft.Sql/servers/advisors"
      apiVersion: "2014-04-01"
      name: "[concat(parameters('servers_linktechdbserver_name'), '/DbParameterization')]"
      dependsOn: 
        - "[resourceId('Microsoft.Sql/servers', parameters('servers_linktechdbserver_name'))]"
      properties: 
        autoExecuteValue: "Disabled"
    - 
      type: "Microsoft.Sql/servers/advisors"
      apiVersion: "2014-04-01"
      name: "[concat(parameters('servers_linktechdbserver_name'), '/DefragmentIndex')]"
      dependsOn: 
        - "[resourceId('Microsoft.Sql/servers', parameters('servers_linktechdbserver_name'))]"
      properties: 
        autoExecuteValue: "Disabled"
    - 
      type: "Microsoft.Sql/servers/advisors"
      apiVersion: "2014-04-01"
      name: "[concat(parameters('servers_linktechdbserver_name'), '/DropIndex')]"
      dependsOn: 
        - "[resourceId('Microsoft.Sql/servers', parameters('servers_linktechdbserver_name'))]"
      properties: 
        autoExecuteValue: "Disabled"
    - 
      type: "Microsoft.Sql/servers/advisors"
      apiVersion: "2014-04-01"
      name: "[concat(parameters('servers_linktechdbserver_name'), '/ForceLastGoodPlan')]"
      dependsOn: 
        - "[resourceId('Microsoft.Sql/servers', parameters('servers_linktechdbserver_name'))]"
      properties: 
        autoExecuteValue: "Enabled"
    - 
      type: "Microsoft.Sql/servers/auditingPolicies"
      apiVersion: "2014-04-01"
      name: "[concat(parameters('servers_linktechdbserver_name'), '/Default')]"
      location: "Canada East"
      dependsOn: 
        - "[resourceId('Microsoft.Sql/servers', parameters('servers_linktechdbserver_name'))]"
      properties: 
        auditingState: "Disabled"
    - 
      type: "Microsoft.Sql/servers/auditingSettings"
      apiVersion: "2022-11-01-preview"
      name: "[concat(parameters('servers_linktechdbserver_name'), '/Default')]"
      dependsOn: 
        - "[resourceId('Microsoft.Sql/servers', parameters('servers_linktechdbserver_name'))]"
      properties: 
        retentionDays: 0
        auditActionsAndGroups: []
        isStorageSecondaryKeyInUse: false
        isAzureMonitorTargetEnabled: false
        isManagedIdentityInUse: false
        state: "Disabled"
        storageAccountSubscriptionId: "00000000-0000-0000-0000-000000000000"
    - 
      type: "Microsoft.Sql/servers/connectionPolicies"
      apiVersion: "2022-11-01-preview"
      name: "[concat(parameters('servers_linktechdbserver_name'), '/default')]"
      location: "canadaeast"
      dependsOn: 
        - "[resourceId('Microsoft.Sql/servers', parameters('servers_linktechdbserver_name'))]"
      properties: 
        connectionType: "Default"
    - 
      type: "Microsoft.Sql/servers/databases"
      apiVersion: "2022-11-01-preview"
      name: "[concat(parameters('servers_linktechdbserver_name'), '/LinkTechDB')]"
      location: "canadaeast"
      dependsOn: 
        - "[resourceId('Microsoft.Sql/servers', parameters('servers_linktechdbserver_name'))]"
      sku: 
        name: "Basic"
        tier: "Basic"
        capacity: 5
      kind: "v12.0,user"
      properties: 
        collation: "SQL_Latin1_General_CP1_CI_AS"
        maxSizeBytes: 2147483648
        catalogCollation: "SQL_Latin1_General_CP1_CI_AS"
        zoneRedundant: false
        readScale: "Disabled"
        requestedBackupStorageRedundancy: "Local"
        maintenanceConfigurationId: "/subscriptions/c23271e6-01ae-4dfa-85d3-783bf6dfa210/providers/Microsoft.Maintenance/publicMaintenanceConfigurations/SQL_Default"
        isLedgerOn: false
        availabilityZone: "NoPreference"
    - 
      type: "Microsoft.Sql/servers/databases/advancedThreatProtectionSettings"
      apiVersion: "2022-11-01-preview"
      name: "[concat(parameters('servers_linktechdbserver_name'), '/master/Default')]"
      dependsOn: 
        - "[resourceId('Microsoft.Sql/servers', parameters('servers_linktechdbserver_name'))]"
      properties: 
        state: "Disabled"
    - 
      type: "Microsoft.Sql/servers/databases/auditingPolicies"
      apiVersion: "2014-04-01"
      name: "[concat(parameters('servers_linktechdbserver_name'), '/master/Default')]"
      location: "Canada East"
      dependsOn: 
        - "[resourceId('Microsoft.Sql/servers', parameters('servers_linktechdbserver_name'))]"
      properties: 
        auditingState: "Disabled"
    - 
      type: "Microsoft.Sql/servers/databases/auditingSettings"
      apiVersion: "2022-11-01-preview"
      name: "[concat(parameters('servers_linktechdbserver_name'), '/master/Default')]"
      dependsOn: 
        - "[resourceId('Microsoft.Sql/servers', parameters('servers_linktechdbserver_name'))]"
      properties: 
        retentionDays: 0
        isAzureMonitorTargetEnabled: false
        state: "Disabled"
        storageAccountSubscriptionId: "00000000-0000-0000-0000-000000000000"
    - 
      type: "Microsoft.Sql/servers/databases/extendedAuditingSettings"
      apiVersion: "2022-11-01-preview"
      name: "[concat(parameters('servers_linktechdbserver_name'), '/master/Default')]"
      dependsOn: 
        - "[resourceId('Microsoft.Sql/servers', parameters('servers_linktechdbserver_name'))]"
      properties: 
        retentionDays: 0
        isAzureMonitorTargetEnabled: false
        state: "Disabled"
        storageAccountSubscriptionId: "00000000-0000-0000-0000-000000000000"
    - 
      type: "Microsoft.Sql/servers/databases/geoBackupPolicies"
      apiVersion: "2022-11-01-preview"
      name: "[concat(parameters('servers_linktechdbserver_name'), '/master/Default')]"
      dependsOn: 
        - "[resourceId('Microsoft.Sql/servers', parameters('servers_linktechdbserver_name'))]"
      properties: 
        state: "Disabled"
    - 
      type: "Microsoft.Sql/servers/databases/ledgerDigestUploads"
      apiVersion: "2022-11-01-preview"
      name: "[concat(parameters('servers_linktechdbserver_name'), '/master/Current')]"
      dependsOn: 
        - "[resourceId('Microsoft.Sql/servers', parameters('servers_linktechdbserver_name'))]"
      properties: {}
    - 
      type: "Microsoft.Sql/servers/databases/securityAlertPolicies"
      apiVersion: "2022-11-01-preview"
      name: "[concat(parameters('servers_linktechdbserver_name'), '/master/Default')]"
      dependsOn: 
        - "[resourceId('Microsoft.Sql/servers', parameters('servers_linktechdbserver_name'))]"
      properties: 
        state: "Disabled"
        disabledAlerts: 
          - ""
        emailAddresses: 
          - ""
        emailAccountAdmins: false
        retentionDays: 0
    - 
      type: "Microsoft.Sql/servers/databases/transparentDataEncryption"
      apiVersion: "2022-11-01-preview"
      name: "[concat(parameters('servers_linktechdbserver_name'), '/master/Current')]"
      dependsOn: 
        - "[resourceId('Microsoft.Sql/servers', parameters('servers_linktechdbserver_name'))]"
      properties: 
        state: "Disabled"
    - 
      type: "Microsoft.Sql/servers/databases/vulnerabilityAssessments"
      apiVersion: "2022-11-01-preview"
      name: "[concat(parameters('servers_linktechdbserver_name'), '/master/Default')]"
      dependsOn: 
        - "[resourceId('Microsoft.Sql/servers', parameters('servers_linktechdbserver_name'))]"
      properties: 
        recurringScans: 
          isEnabled: false
          emailSubscriptionAdmins: true
    - 
      type: "Microsoft.Sql/servers/devOpsAuditingSettings"
      apiVersion: "2022-11-01-preview"
      name: "[concat(parameters('servers_linktechdbserver_name'), '/Default')]"
      dependsOn: 
        - "[resourceId('Microsoft.Sql/servers', parameters('servers_linktechdbserver_name'))]"
      properties: 
        isAzureMonitorTargetEnabled: false
        isManagedIdentityInUse: false
        state: "Disabled"
        storageAccountSubscriptionId: "00000000-0000-0000-0000-000000000000"
    - 
      type: "Microsoft.Sql/servers/encryptionProtector"
      apiVersion: "2022-11-01-preview"
      name: "[concat(parameters('servers_linktechdbserver_name'), '/current')]"
      dependsOn: 
        - "[resourceId('Microsoft.Sql/servers', parameters('servers_linktechdbserver_name'))]"
      kind: "servicemanaged"
      properties: 
        serverKeyName: "ServiceManaged"
        serverKeyType: "ServiceManaged"
        autoRotationEnabled: false
    - 
      type: "Microsoft.Sql/servers/extendedAuditingSettings"
      apiVersion: "2022-11-01-preview"
      name: "[concat(parameters('servers_linktechdbserver_name'), '/Default')]"
      dependsOn: 
        - "[resourceId('Microsoft.Sql/servers', parameters('servers_linktechdbserver_name'))]"
      properties: 
        retentionDays: 0
        auditActionsAndGroups: []
        isStorageSecondaryKeyInUse: false
        isAzureMonitorTargetEnabled: false
        isManagedIdentityInUse: false
        state: "Disabled"
        storageAccountSubscriptionId: "00000000-0000-0000-0000-000000000000"
    - 
      type: "Microsoft.Sql/servers/firewallRules"
      apiVersion: "2022-11-01-preview"
      name: "[concat(parameters('servers_linktechdbserver_name'), '/AllowAllWindowsAzureIps')]"
      dependsOn: 
        - "[resourceId('Microsoft.Sql/servers', parameters('servers_linktechdbserver_name'))]"
    - 
      type: "Microsoft.Sql/servers/keys"
      apiVersion: "2022-11-01-preview"
      name: "[concat(parameters('servers_linktechdbserver_name'), '/ServiceManaged')]"
      dependsOn: 
        - "[resourceId('Microsoft.Sql/servers', parameters('servers_linktechdbserver_name'))]"
      kind: "servicemanaged"
      properties: 
        serverKeyType: "ServiceManaged"
    - 
      type: "Microsoft.Sql/servers/securityAlertPolicies"
      apiVersion: "2022-11-01-preview"
      name: "[concat(parameters('servers_linktechdbserver_name'), '/Default')]"
      dependsOn: 
        - "[resourceId('Microsoft.Sql/servers', parameters('servers_linktechdbserver_name'))]"
      properties: 
        state: "Disabled"
        disabledAlerts: 
          - ""
        emailAddresses: 
          - ""
        emailAccountAdmins: false
        retentionDays: 0
    - 
      type: "Microsoft.Sql/servers/sqlVulnerabilityAssessments"
      apiVersion: "2022-11-01-preview"
      name: "[concat(parameters('servers_linktechdbserver_name'), '/Default')]"
      dependsOn: 
        - "[resourceId('Microsoft.Sql/servers', parameters('servers_linktechdbserver_name'))]"
      properties: 
        state: "Disabled"
    - 
      type: "Microsoft.Sql/servers/vulnerabilityAssessments"
      apiVersion: "2022-11-01-preview"
      name: "[concat(parameters('servers_linktechdbserver_name'), '/Default')]"
      dependsOn: 
        - "[resourceId('Microsoft.Sql/servers', parameters('servers_linktechdbserver_name'))]"
      properties: 
        recurringScans: 
          isEnabled: false
          emailSubscriptionAdmins: true
        storageContainerPath: "[parameters('vulnerabilityAssessments_Default_storageContainerPath')]"
    - 
      type: "Microsoft.Sql/servers/databases/advancedThreatProtectionSettings"
      apiVersion: "2022-11-01-preview"
      name: "[concat(parameters('servers_linktechdbserver_name'), '/LinkTechDB/Default')]"
      dependsOn: 
        - "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_linktechdbserver_name'), 'LinkTechDB')]"
        - "[resourceId('Microsoft.Sql/servers', parameters('servers_linktechdbserver_name'))]"
      properties: 
        state: "Disabled"
    - 
      type: "Microsoft.Sql/servers/databases/advisors"
      apiVersion: "2014-04-01"
      name: "[concat(parameters('servers_linktechdbserver_name'), '/LinkTechDB/CreateIndex')]"
      dependsOn: 
        - "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_linktechdbserver_name'), 'LinkTechDB')]"
        - "[resourceId('Microsoft.Sql/servers', parameters('servers_linktechdbserver_name'))]"
      properties: 
        autoExecuteValue: "Disabled"
    - 
      type: "Microsoft.Sql/servers/databases/advisors"
      apiVersion: "2014-04-01"
      name: "[concat(parameters('servers_linktechdbserver_name'), '/LinkTechDB/DbParameterization')]"
      dependsOn: 
        - "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_linktechdbserver_name'), 'LinkTechDB')]"
        - "[resourceId('Microsoft.Sql/servers', parameters('servers_linktechdbserver_name'))]"
      properties: 
        autoExecuteValue: "Disabled"
    - 
      type: "Microsoft.Sql/servers/databases/advisors"
      apiVersion: "2014-04-01"
      name: "[concat(parameters('servers_linktechdbserver_name'), '/LinkTechDB/DefragmentIndex')]"
      dependsOn: 
        - "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_linktechdbserver_name'), 'LinkTechDB')]"
        - "[resourceId('Microsoft.Sql/servers', parameters('servers_linktechdbserver_name'))]"
      properties: 
        autoExecuteValue: "Disabled"
    - 
      type: "Microsoft.Sql/servers/databases/advisors"
      apiVersion: "2014-04-01"
      name: "[concat(parameters('servers_linktechdbserver_name'), '/LinkTechDB/DropIndex')]"
      dependsOn: 
        - "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_linktechdbserver_name'), 'LinkTechDB')]"
        - "[resourceId('Microsoft.Sql/servers', parameters('servers_linktechdbserver_name'))]"
      properties: 
        autoExecuteValue: "Disabled"
    - 
      type: "Microsoft.Sql/servers/databases/advisors"
      apiVersion: "2014-04-01"
      name: "[concat(parameters('servers_linktechdbserver_name'), '/LinkTechDB/ForceLastGoodPlan')]"
      dependsOn: 
        - "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_linktechdbserver_name'), 'LinkTechDB')]"
        - "[resourceId('Microsoft.Sql/servers', parameters('servers_linktechdbserver_name'))]"
      properties: 
        autoExecuteValue: "Enabled"
    - 
      type: "Microsoft.Sql/servers/databases/auditingPolicies"
      apiVersion: "2014-04-01"
      name: "[concat(parameters('servers_linktechdbserver_name'), '/LinkTechDB/Default')]"
      location: "Canada East"
      dependsOn: 
        - "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_linktechdbserver_name'), 'LinkTechDB')]"
        - "[resourceId('Microsoft.Sql/servers', parameters('servers_linktechdbserver_name'))]"
      properties: 
        auditingState: "Disabled"
    - 
      type: "Microsoft.Sql/servers/databases/auditingSettings"
      apiVersion: "2022-11-01-preview"
      name: "[concat(parameters('servers_linktechdbserver_name'), '/LinkTechDB/Default')]"
      dependsOn: 
        - "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_linktechdbserver_name'), 'LinkTechDB')]"
        - "[resourceId('Microsoft.Sql/servers', parameters('servers_linktechdbserver_name'))]"
      properties: 
        retentionDays: 0
        isAzureMonitorTargetEnabled: false
        state: "Disabled"
        storageAccountSubscriptionId: "00000000-0000-0000-0000-000000000000"
    - 
      type: "Microsoft.Sql/servers/databases/backupLongTermRetentionPolicies"
      apiVersion: "2022-11-01-preview"
      name: "[concat(parameters('servers_linktechdbserver_name'), '/LinkTechDB/default')]"
      dependsOn: 
        - "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_linktechdbserver_name'), 'LinkTechDB')]"
        - "[resourceId('Microsoft.Sql/servers', parameters('servers_linktechdbserver_name'))]"
      properties: 
        weeklyRetention: "PT0S"
        monthlyRetention: "PT0S"
        yearlyRetention: "PT0S"
        weekOfYear: 0
    - 
      type: "Microsoft.Sql/servers/databases/backupShortTermRetentionPolicies"
      apiVersion: "2022-11-01-preview"
      name: "[concat(parameters('servers_linktechdbserver_name'), '/LinkTechDB/default')]"
      dependsOn: 
        - "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_linktechdbserver_name'), 'LinkTechDB')]"
        - "[resourceId('Microsoft.Sql/servers', parameters('servers_linktechdbserver_name'))]"
      properties: 
        retentionDays: 7
        diffBackupIntervalInHours: 24
    - 
      type: "Microsoft.Sql/servers/databases/extendedAuditingSettings"
      apiVersion: "2022-11-01-preview"
      name: "[concat(parameters('servers_linktechdbserver_name'), '/LinkTechDB/Default')]"
      dependsOn: 
        - "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_linktechdbserver_name'), 'LinkTechDB')]"
        - "[resourceId('Microsoft.Sql/servers', parameters('servers_linktechdbserver_name'))]"
      properties: 
        retentionDays: 0
        isAzureMonitorTargetEnabled: false
        state: "Disabled"
        storageAccountSubscriptionId: "00000000-0000-0000-0000-000000000000"
    - 
      type: "Microsoft.Sql/servers/databases/geoBackupPolicies"
      apiVersion: "2022-11-01-preview"
      name: "[concat(parameters('servers_linktechdbserver_name'), '/LinkTechDB/Default')]"
      dependsOn: 
        - "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_linktechdbserver_name'), 'LinkTechDB')]"
        - "[resourceId('Microsoft.Sql/servers', parameters('servers_linktechdbserver_name'))]"
      properties: 
        state: "Disabled"
    - 
      type: "Microsoft.Sql/servers/databases/ledgerDigestUploads"
      apiVersion: "2022-11-01-preview"
      name: "[concat(parameters('servers_linktechdbserver_name'), '/LinkTechDB/Current')]"
      dependsOn: 
        - "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_linktechdbserver_name'), 'LinkTechDB')]"
        - "[resourceId('Microsoft.Sql/servers', parameters('servers_linktechdbserver_name'))]"
      properties: {}
    - 
      type: "Microsoft.Sql/servers/databases/securityAlertPolicies"
      apiVersion: "2022-11-01-preview"
      name: "[concat(parameters('servers_linktechdbserver_name'), '/LinkTechDB/Default')]"
      dependsOn: 
        - "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_linktechdbserver_name'), 'LinkTechDB')]"
        - "[resourceId('Microsoft.Sql/servers', parameters('servers_linktechdbserver_name'))]"
      properties: 
        state: "Disabled"
        disabledAlerts: 
          - ""
        emailAddresses: 
          - ""
        emailAccountAdmins: false
        retentionDays: 0
    - 
      type: "Microsoft.Sql/servers/databases/transparentDataEncryption"
      apiVersion: "2022-11-01-preview"
      name: "[concat(parameters('servers_linktechdbserver_name'), '/LinkTechDB/Current')]"
      dependsOn: 
        - "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_linktechdbserver_name'), 'LinkTechDB')]"
        - "[resourceId('Microsoft.Sql/servers', parameters('servers_linktechdbserver_name'))]"
      properties: 
        state: "Enabled"
    - 
      type: "Microsoft.Sql/servers/databases/vulnerabilityAssessments"
      apiVersion: "2022-11-01-preview"
      name: "[concat(parameters('servers_linktechdbserver_name'), '/LinkTechDB/Default')]"
      dependsOn: 
        - "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_linktechdbserver_name'), 'LinkTechDB')]"
        - "[resourceId('Microsoft.Sql/servers', parameters('servers_linktechdbserver_name'))]"
      properties: 
        recurringScans: 
          isEnabled: false
          emailSubscriptionAdmins: true

